function PCMPlayer(t){this.init(t)}PCMPlayer.prototype.init=function(t){this.option=Object.assign({},{encoding:"16bitInt",channels:1,sampleRate:8e3,flushingTime:1e3,pan:0},t),this.samples=new Float32Array,this.flush=this.flush.bind(this),this.interval=setInterval(this.flush,this.option.flushingTime),this.maxValue=this.getMaxValue(),this.typedArray=this.getTypedArray(),this.createContext()},PCMPlayer.prototype.getMaxValue=function(){var t={"8bitInt":128,"16bitInt":32768,"32bitInt":2147483648,"32bitFloat":1};return t[this.option.encoding]?t[this.option.encoding]:t["16bitInt"]},PCMPlayer.prototype.getTypedArray=function(){var t={"8bitInt":Int8Array,"16bitInt":Int16Array,"32bitInt":Int32Array,"32bitFloat":Float32Array};return t[this.option.encoding]?t[this.option.encoding]:t["16bitInt"]},PCMPlayer.prototype.createContext=function(){this.audioCtx=new(window.AudioContext||window.webkitAudioContext),this.gainNode=this.audioCtx.createGain(),this.gainNode.gain.value=1,this.panNode=this.audioCtx.createStereoPanner(),this.panNode.pan.value=this.option.pan,this.gainNode.connect(this.panNode),this.panNode.connect(this.audioCtx.destination),this.startTime=this.audioCtx.currentTime},PCMPlayer.prototype.isTypedArray=function(t){return t.byteLength&&t.buffer&&t.buffer.constructor==ArrayBuffer},PCMPlayer.prototype.feed=function(t){var e;this.isTypedArray(t)&&(t=this.getFormatedValue(t),(e=new Float32Array(this.samples.length+t.length)).set(this.samples,0),e.set(t,this.samples.length),this.samples=e)},PCMPlayer.prototype.getFormatedValue=function(t){for(var t=new this.typedArray(t.buffer),e=new Float32Array(t.length),i=0;i<t.length;i++)e[i]=t[i]/this.maxValue;return e},PCMPlayer.prototype.volume=function(t){this.gainNode.gain.value=t},PCMPlayer.prototype.pan=function(t){this.panNode.pan.value=t},PCMPlayer.prototype.destroy=function(){this.interval&&clearInterval(this.interval),this.samples=null,this.audioCtx.close(),this.audioCtx=null},PCMPlayer.prototype.flush=function(){if(this.samples.length){for(var t,e,i,n,a=this.audioCtx.createBufferSource(),o=this.samples.length/this.option.channels,s=this.audioCtx.createBuffer(this.option.channels,o,this.option.sampleRate),r=0;r<this.option.channels;r++)for(t=s.getChannelData(r),e=r,n=50,i=0;i<o;i++)t[i]=this.samples[e],i<50&&(t[i]=t[i]*i/50),o-51<=i&&(t[i]=t[i]*n--/50),e+=this.option.channels;this.startTime<this.audioCtx.currentTime&&(this.startTime=this.audioCtx.currentTime),a.buffer=s,a.connect(this.gainNode),a.start(this.startTime),this.startTime+=s.duration,this.samples=new Float32Array}};